params(["_taors"]);

params(_taors, ["_startPoint1","_startPoint2"]);


// flood fill to find taors
// oscillate between each start point
// for fair sector distribution

var _teamOneSectors = [_startPoint1];
var _teamTwoSectors = [_startPoint2];

var _teamOneBorderSectors = [_startPoint1];
var _teamTwoBorderSectors = [_startPoint2];

var _allSectors = ALIVE_fnc_sectorGrid(ALiVE_sectorGrid,"sectors");
//var _landSectors = ALIVE_fnc_sectorFilterTerrain(_allSectors,"SEA");

var _openSectorIDs = apply(_allSectors, function(){
    ALiVE_fnc_hashGet(_x,"id");
});

var _fillNextSector = function(Array _teamSectors, Array _teamBorderSectors) {
    if (!isEqualTo(_teamBorderSectors,[])) {
        var _targetSector = deleteat(_teamBorderSectors,0);

        var _surroundingSectors = ALiVE_fnc_sectorGrid(ALiVE_sectorGrid,"surroundingSectors", ALiVE_fnc_hashGet(_targetSector,"position"));
        _surroundingSectors = select(_surroundingSectors, function(){
            in(ALiVE_fnc_hashGet(_x,"id"), _openSectorIDs);
        });

        append(_teamBorderSectors,_surroundingSectors);

        if (!isEqualTo(_surroundingSectors,[])) {
            var _sectorToAdd = select(_surroundingSectors,0);
            pushback(_teamSectors,_sectorToAdd);

            var _removedSectorIndex = find(_openSectorIDs, ALiVE_fnc_hashGet(_sectorToAdd,"id"));
            deleteat(_openSectorIDs,_removedSectorIndex);
        };
    };
};

while (!isEqualTo(_openSectorIDs,[])) {
    _fillNextSector(_teamOneSectors,_teamOneBorderSectors);
    _fillNextSector(_teamTwoSectors,_teamTwoBorderSectors);
};

return [_teamOneSectors,_teamTwoSectors];